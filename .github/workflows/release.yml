name: release

on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  release:
    runs-on: ubuntu-latest
    permissions: write-all
    name: Release
    steps:

    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Check version
      id: version-check
      run: |
        chmod +x ./scripts/is-newer-version.bash
        chmod +x ./scripts/get-version.bash
        VERSION=$(./scripts/is-newer-version.bash)
        echo "version=${VERSION}" >> $GITHUB_OUTPUT
        if [ "$VERSION" != "0" ]; then
          echo "New version detected: $VERSION"
        else
          echo "No new version to release"
        fi

    - name: Push tag
      if: steps.version-check.outputs.version != '0'
      id: push-tag
      run: |
        tag="v${{ steps.version-check.outputs.version }}"
        git config user.name "${GITHUB_ACTOR}"
        git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
        git tag -a "${tag}" -m "Release ${tag}"
        git push origin "${tag}"
        echo "tag_name=${tag}" >> $GITHUB_OUTPUT

    - name: Checkout
      if: steps.version-check.outputs.version != '0'
      uses: actions/checkout@v4

    - name: Create release
      if: steps.version-check.outputs.version != '0'
      uses: ncipollo/release-action@v1
      with:
        generateReleaseNotes: true
        tag: "v${{ steps.version-check.outputs.version }}"
        artifacts: "./README.md"

    - name: Drop markdown.html
      uses: PJ-568/MARKDOWN.HTML@v1.18.2

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './'

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

    - name: Delete tag
      if: (cancelled() || failure()) && steps.push-tag.outputs.tag_name != ''
      run: |
        git config user.name "${GITHUB_ACTOR}"
        git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
        git push --delete origin "${{ steps.push-tag.outputs.tag_name }}"
        git tag -d "${{ steps.push-tag.outputs.tag_name }}"